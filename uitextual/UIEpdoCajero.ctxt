#BlueJ class context
comment0.target=UIEpdoCajero
comment0.text=\r\n\ Implementacion\ de\ la\ representacion\ de\ la\ clase\ EpdoCajero\ en\ la\r\n\ interfaz\ textual\ del\ programa.\r\n\ \r\n\ @author\ Marcos\ Barrios\r\n\ @version\ 1.0\r\n
comment1.params=usuario\ diaActual\ mesActual\ a\u00F1oActual
comment1.target=UIEpdoCajero(backend.EpdoCajero,\ int,\ int,\ int)
comment10.params=productos\ usuarios
comment10.target=void\ imprimirDatosProducto(productos.Productos,\ backend.Usuarios)
comment10.text=\r\n\ Imprime\ los\ datos\ de\ un\ producto\r\n\ \r\n\ @param\ productos\ Base\ de\ datos\ de\ productos\ del\ programa\r\n
comment11.params=usuarios\ numProducto
comment11.target=void\ imprimirProductosCompradosCliente(backend.Usuarios,\ int)
comment11.text=\r\n\ Metodo\ auxiliar\ de\ imprimirDatosProducto(...)\r\n
comment12.params=usuarios
comment12.target=void\ imprimirCaracteristicasProductoComprado(backend.Usuarios)
comment12.text=\r\n\ Metodo\ auxiliar\ de\ imprimirListaProductos(...)\r\n
comment13.params=productos\ usuarios
comment13.target=void\ imprimirListaProductos(productos.Productos,\ backend.Usuarios)
comment13.text=\r\n\ Obtiene\ la\ lista\ de\ productos\ de\ la\ tienda\ (base\ de\ datos\ de\r\n\ productos)\ e\ imprime\ una\ lista.\r\n\ \r\n\ Numero\ de\ producto,\ Cantidad,\ Precio,\ Peso,\ Estado,\ Descripcion\r\n\ \r\n
comment2.params=
comment2.target=backend.EpdoCajero\ obtenerCajero()
comment2.text=\r\n\ Devolvemos\ el\ cajero\ que\ esta\ trabajando\ sobre\ el\ programa\r\n\ \r\n\ @return\ (EpdoCajero)obtenerUsuario()\r\n
comment3.params=usuarios\ productos
comment3.target=void\ venderProducto(backend.Usuarios,\ productos.Productos)
comment3.text=\r\n\ Vende\ un\ producto\ a\ un\ cliente.\ \r\n\ \r\n\ @param\ usuarios\ Base\ de\ datos\ de\ usuarios\r\n\ @param\ productos\ Base\ de\ datos\ de\ productos\r\n
comment4.params=productos
comment4.target=void\ a\u00F1adirProducto(productos.Productos)
comment4.text=\r\n\ El\ cajero\ ingresa\ en\ la\ base\ de\ datos\ de\ productos\ un\ producto\ que\r\n\ la\ tienda\ acaba\ de\ recibir.\r\n\ \r\n\ Interrogatorio\ textual\ sobre\ las\ caracteristicas\ del\ producto.\r\n\r\n\ @param\ productos\ Base\ de\ datos\ de\ productos\ de\ la\ tienda\r\n
comment5.params=
comment5.target=productos.Producto\ obtenerCategoria()
comment5.text=\r\n\ Metodo\ auxiliar\ de\ a\u00F1adirProducto()\r\n\ \r\n\ Devuelve\ un\ producto\ segun\ su\ categoria\r\n
comment6.params=productos\ usuarios
comment6.target=void\ actualizarProducto(productos.Productos,\ backend.Usuarios)
comment6.text=\r\n\ Actualiza\ los\ datos\ de\ un\ producto.\ Para\ ello\ pregunta\ en\ primer\ lugar\r\n\ por\ el\ numero\ del\ producto,\ posteriormente\ ense\u00F1a\ una\ lista\ con\ los\ datos\r\n\ del\ producto\ y\ pregunta\ que\ opcion\ quiere\ modificar.\r\n\ \r\n\ Por\ ultimo\ pregunta\ por\ el\ nuevo\ valor\ al\ que\ se\ quiere\ modificar.\r\n\ \r\n\ Adicionalmente\ habra\ una\ opcion\ para\ a\u00F1adir\ una\ caracteristica\ adicional.\r\n\ \r\n\ @param\ productos\ Base\ de\ datos\ de\ productos\ de\ la\ tienda\r\n\ @param\ numProducto\ Numero\ del\ producto\ que\ se\ quiere\ modificar\r\n
comment7.params=producto
comment7.target=productos.Producto\ menuModificacionOpciones(productos.Producto)
comment7.text=\r\n\ Metodo\ auxiliar\ de\ actualizarProducto(...)\r\n\ \r\n\ Crea\ un\ menu\ para\ elegir\ la\ opcion\ a\ modificar\r\n\ \r\n
comment8.params=
comment8.target=UIMenu\ a\u00F1adirOpcionesMenuActualizar()
comment8.text=\r\n\ Metodo\ auxiliar\ de\ menuModificacionOpciones(...)\r\n\ A\u00F1ade\ las\ opciones\ al\ menu\r\n
comment9.params=producto
comment9.target=void\ imprimirCaracteristicasProducto(productos.Producto)
comment9.text=\r\n\ Metodo\ auxiliar\ de\ actualizarProducto(...)\ \r\n\ \r\n\ Imprime\ las\ caracteristicas\ del\ producto\ pasado\ como\ argumento\r\n\ \r\n\ @param\ producto\ Producto\ con\ las\ caracteristicas\ a\ imprimir\r\n
numComments=14
