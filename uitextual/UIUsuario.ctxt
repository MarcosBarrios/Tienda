#BlueJ class context
comment0.target=UIUsuario
comment0.text=\r\n\ Clase\ especifica\ para\ la\ parte\ textual\ del\ programa\ que\ implementa\r\n\ metodos\ que\ los\ usuarios\ del\ programa\ necesitan.\r\n\ \r\n\ @author\ Marcos\ Barrios\r\n\ @version\ 1.0\r\n
comment1.params=usuario
comment1.target=UIUsuario(backend.Usuario)
comment10.params=nombreEntrada
comment10.target=boolean\ formatearEntradaBoolean(java.lang.String)
comment10.text=\r\n\ Obtiene\ un\ estado\ booleano\ usando\ texto\ formateado\r\n
comment11.params=nombreEntrada\ tabular\ puntoComa
comment11.target=void\ formatearCadena(java.lang.String,\ boolean,\ boolean)
comment11.text=\r\n\ Da\ formato\ a\ una\ cadena.\ \r\n\ \r\n\ @param\ nombreEntrada\ Nombre\ de\ la\ entrada\r\n\ @param\ tabular\ Si\ tabular\=true\ pone\ "\\t"\ antes\ de\ nombreEntrada\r\n\ @param\ puntoComa\ Si\ puntoComa\=true\ pone\ "\:\ "\ despues\ de\ nombreEntrada\r\n
comment12.params=tabular
comment12.target=void\ tabularCadena(boolean)
comment12.text=\r\n\ Tabula\ una\ cadena\ de\ caracteres\ si\ tabular\=true\r\n
comment13.params=ponerPuntoComa
comment13.target=void\ a\u00F1adirPuntoComa(boolean)
comment13.text=\r\n\ Imprime\ punto\ y\ coma\ si\ ponerPuntoComa\=true\r\n
comment14.params=
comment14.target=void\ imprimirDatos()
comment14.text=\r\n\ Imprime\ los\ datos\ del\ usuario\ (nombre\ y\ email)\r\n\ \r\n\ Ejemplo\ formato\:\ \r\n\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\r\n\ \ Nombre\:\ Marcos\ Barrios\r\n\ \ Email\:\ marcosloscardones@gmail.com\r\n\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\ *\r\n
comment15.params=usuarios
comment15.target=void\ imprimirListaUsuarios(backend.Usuarios)
comment15.text=\r\n\ Imprime\ en\ forma\ de\ lista\ los\ nombres\ y\ emails\ de\ los\ usuarios\r\n\ que\ se\ encuentran\ en\ la\ base\ de\ datos\ del\ programa.\r\n\ \r\n\ @param\ usuarios\ Base\ de\ datos\ de\ usuarios\ del\ programa\r\n
comment2.params=
comment2.target=backend.Usuario\ obtenerUsuario()
comment2.text=\r\n\ Devuelve\ el\ usuario\ utilizando\ el\ programa\r\n\ \r\n\ @return\ usuario\ Usuario\ utilizando\ el\ programa\r\n
comment3.params=
comment3.target=int[]\ preguntarFechaActual()
comment3.text=\r\n\ Crea\ un\ mini\ formulario\ para\ obtener\ fecha\ actual\r\n\ \r\n\ Utilizado\ para\ simplificar\ la\ creacion\ de\ historiales\ de\ acciones.\r\n\ \r\n\ @return\ salida\ Array\ con\ los\ valores\ entero\ dia(0),\ mes(1)\ y\ a\u00F1o(2).\r\n
comment4.params=usuario\ responsable\ tipoOperacion\ dia\ mes\ a\u00F1o
comment4.target=void\ dejarConstancia(backend.Usuario,\ backend.Empleado,\ backend.EnumOperaciones,\ int,\ int,\ int)
comment4.text=\r\n\ Deja\ constancia\ de\ las\ acciones\ realizadas\ en\ los\ respectivos\r\n\ historiales.\r\n\ \r\n\ @param\ cliente\ Cliente\ involucrado\ en\ la\ operacion\r\n\ @param\ responsable\ Empleado\ que\ ha\ realizado\ la\ accion\r\n\ @param\ tipoOperacion\ Tipo\ de\ operacion\ realizada\r\n\ @param\ dia\ Fecha\ de\ la\ operacion\r\n\ @param\ mes\ Fecha\ de\ la\ operacion\r\n\ @param\ a\u00F1o\ Fecha\ de\ la\ operacion\r\n
comment5.params=propietario\ producto\ responsable\ tipoOperacion\ dia\ mes\ a\u00F1o
comment5.target=void\ dejarConstancia(backend.Cliente,\ productos.Producto,\ backend.Empleado,\ backend.EnumOperaciones,\ int,\ int,\ int)
comment5.text=\r\n\ Deja\ constancia\ de\ las\ acciones\ realizadas\ en\ los\ respectivos\r\n\ historiales.\r\n\ \r\n\ @param\ numProducto\ Numero\ del\ producto\ involucrado\r\n\ @param\ responsable\ Empleado\ que\ ha\ realizado\ la\ accion\r\n\ @param\ tipoOperacion\ Tipo\ de\ operacion\ realizada\r\n\ @param\ dia\ Fecha\ de\ la\ operacion\r\n\ @param\ mes\ Fecha\ de\ la\ operacion\r\n\ @param\ a\u00F1o\ Fecha\ de\ la\ operacion\r\n
comment6.params=nombresEntradas
comment6.target=java.lang.String[]\ formularioCadenas(java.lang.String[])
comment6.text=\r\n\ Pide\ una\ entrada\ para\ cada\ cadena\ de\ caracteres\ en\ nombresEntradas.\r\n\ \r\n\ Las\ entradas\ obtenidas\ son\ lineas\ completas\ (UIEntradas.obtenerCadena(true))\r\n\ \r\n\ @param\ nombresEntradas\ Array\ con\ los\ nombres\ para\ las\ diferentes\ entradas\r\n\ @return\ salidas\ Array\ con\ entradas\ obtenidas\ del\ usuario\r\n
comment7.params=nombresEntradas
comment7.target=float[]\ formularioDecimales(java.lang.String[])
comment7.text=\r\n\ Pide\ una\ entrada\ para\ cada\ entero\ o\ decimal\ en\ nombresEntradas.\r\n\ \r\n\ @param\ nombresEntradas\ Array\ con\ los\ nombres\ para\ las\ diferentes\ entradas\r\n\ @return\ salidas\ Array\ con\ entradas\ obtenidas\ del\ usuario\r\n
comment8.params=nombreEntrada\ lineaCompleta
comment8.target=java.lang.String\ formatearEntradaCadena(java.lang.String,\ boolean)
comment8.text=\r\n\ Obtiene\ una\ cadena\ de\ caracteres\ usando\ texto\ formateado\r\n
comment9.params=nombreEntrada
comment9.target=float\ formatearEntradaDecimal(java.lang.String)
comment9.text=\r\n\ Obtiene\ un\ numero\ decimal\ usando\ texto\ formateado\r\n\ \r\n\ Puede\ ser\ convertido\ a\ entero\ para\ obtener\ entradas\ enteras\r\n
numComments=16
